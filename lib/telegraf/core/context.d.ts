declare const updateTypes: string[];
declare const messageSubTypes: string[];
declare class TelegrafContext {
    constructor(update: any, telegram: any, options: any);
    readonly me: any;
    readonly telegram: Telegram;
    readonly message: any;
    readonly editedMessage: any;
    readonly inlineQuery: any;
    readonly shippingQuery: any;
    readonly preCheckoutQuery: any;
    readonly chosenInlineResult: any;
    readonly channelPost: any;
    readonly editedChannelPost: any;
    readonly callbackQuery: any;
    readonly chat: any;
    readonly from: any;
    state: any;
    assert(value: any, method: any): void;
    answerInlineQuery(...args: any[]): any;
    answerCallbackQuery(...args: any[]): any;
    answerCbQuery(...args: any[]): any;
    answerGameQuery(...args: any[]): any;
    answerShippingQuery(...args: any[]): any;
    answerPreCheckoutQuery(...args: any[]): any;
    editMessageText(text: any, extra: any): any;
    editMessageCaption(caption: any, markup: any): any;
    editMessageReplyMarkup(markup: any): any;
    editMessageLiveLocation(latitude: any, longitude: any, markup: any): any;
    stopMessageLiveLocation(markup: any): any;
    reply(...args: any[]): any;
    getChat(...args: any[]): any;
    exportChatInviteLink(...args: any[]): any;
    kickChatMember(...args: any[]): any;
    restrictChatMember(...args: any[]): any;
    promoteChatMember(...args: any[]): any;
    setChatPhoto(...args: any[]): any;
    deleteChatPhoto(...args: any[]): any;
    setChatTitle(...args: any[]): any;
    setChatDescription(...args: any[]): any;
    pinChatMessage(...args: any[]): any;
    unpinChatMessage(...args: any[]): any;
    leaveChat(...args: any[]): any;
    getChatAdministrators(...args: any[]): any;
    getChatMember(...args: any[]): any;
    getChatMembersCount(...args: any[]): any;
    replyWithPhoto(...args: any[]): any;
    replyWithMediaGroup(...args: any[]): any;
    replyWithAudio(...args: any[]): any;
    replyWithDocument(...args: any[]): any;
    replyWithSticker(...args: any[]): any;
    replyWithVideo(...args: any[]): any;
    replyWithVideoNote(...args: any[]): any;
    replyWithInvoice(...args: any[]): any;
    replyWithGame(...args: any[]): any;
    replyWithVoice(...args: any[]): any;
    replyWithChatAction(...args: any[]): any;
    replyWithLocation(...args: any[]): any;
    replyWithVenue(...args: any[]): any;
    replyWithContact(...args: any[]): any;
    getStickerSet(setName: any): any;
    setChatStickerSet(setName: any): any;
    deleteChatStickerSet(): any;
    setStickerPositionInSet(sticker: any, position: any): any;
    deleteStickerFromSet(sticker: any): any;
    uploadStickerFile(...args: any[]): any;
    createNewStickerSet(...args: any[]): any;
    addStickerToSet(...args: any[]): any;
    replyWithMarkdown(markdown: any, extra?: any): any;
    replyWithHTML(html: any, extra: any): any;
    deleteMessage(): any;
}
